{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.fdd3b1d40a21dbfa3f75.hot-update.js","sources":["webpack:///./redux/module/login.js"],"sourcesContent":["// 액션 타입 정의\nexport const actionTypes = {\n    LOGIN_REQUEST: 'LOGIN_REQUEST',\n    FAILURELOGIN: 'FAILURELOGIN',\n    SUCCESSLOGIN: 'SUCCESSLOGIN',\n    FAILURELOGOUT: 'FAILURELOGOUT',\n    SUCCESSLOGOUT: 'SUCCESSLOGOUT',\n}\nexport const CHANGE_FORM = 'CHANGE_FORM'\nexport const SET_AUTH = 'SET_AUTH'\nexport const SENDING_REQUEST = 'SENDING_REQUEST'\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST'\nexport const REGISTER_REQUEST = 'REGISTER_REQUEST'\nexport const LOGOUT = 'LOGOUT'\nexport const REQUEST_ERROR = 'REQUEST_ERROR'\nexport const CLEAR_ERROR = 'CLEAR_ERROR'\n\n// **** 액션 생섬함수 정의\n// export const loginRequest = (name, password) => ({\n//     type: actionTypes.LOGIN_REQUEST,\n//     name, \n//     password\n// });\n// export const failureLogin = error => ({\n//     type: actionTypes.FAILURELOGIN,\n//     error\n// });\n// export const successLogin = () => ({\n//     type: actionTypes.SUCCESSLOGIN\n// });\n// export const failureLogout = error => ({\n//     type: actionTypes.FAILURELOGOUT,\n//     error\n// })\n// export const successLogout = () => ({\n//     type: actionTypes.SUCCESSLOGOUT\n// })\n\n// // **** 초기상태 정의\nconst loginInitialState = {\n    login: false,\n    error: false,\n}\n\n// // **** 리듀서 작성\nfunction reducer (state = loginInitialState, action) {\n    switch (action.type) {\n        // case actionTypes.FAILURELOGIN:\n        //     return {\n        //         ...state,\n        //         ...{ error: action.error ,login: false }\n        //     }\n        // case actionTypes.SUCCESSLOGIN:\n        //     return {\n        //         ...state,\n        //         ...{ login: true }\n        //     }\n        // case actionTypes.FAILURELOGOUT:\n        //     return {\n        //         ...state,\n        //         ...{ error: action.error, login: false }\n        //     }\n        // case actionTypes.SUCCESSLOGOUT:\n        //     return {\n        //         ...state,\n        //         ...{ login: false }\n        //     }\n        default:\n            return state\n    }\n}\n\n/**\n * Sets the form state\n * @param  {object} newFormState          The new state of the form\n * @param  {string} newFormState.username The new text of the username input field of the form\n * @param  {string} newFormState.password The new text of the password input field of the form\n */\nexport function changeForm (newFormState) {\n    return {type: CHANGE_FORM, newFormState}\n}\n  \n/**\n * Sets the authentication state of the application\n* @param  {boolean} newAuthState True means a user is logged in, false means no user is logged in\n*/\nexport function setAuthState (newAuthState) {\n    return {type: SET_AUTH, newAuthState}\n}\n  \n/**\n   * Sets the `currentlySending` state, which displays a loading indicator during requests\n   * @param  {boolean} sending True means we're sending a request, false means we're not\n   */\nexport function sendingRequest (sending) {\n    return {type: SENDING_REQUEST, sending}\n}\n\n/**\n   * Tells the app we want to log in a user\n   * @param  {object} data          The data we're sending for log in\n   * @param  {string} data.username The username of the user to log in\n   * @param  {string} data.password The password of the user to log in\n   */\nexport function loginRequest (data) {\n    return {type: LOGIN_REQUEST, data}\n}\n\n/**\n   * Tells the app we want to log out a user\n   */\nexport function logout () {\n    return {type: LOGOUT}\n}\n\n/**\n   * Tells the app we want to register a user\n   * @param  {object} data          The data we're sending for registration\n   * @param  {string} data.username The username of the user to register\n   * @param  {string} data.password The password of the user to register\n   */\nexport function registerRequest (data) {\n    return {type: REGISTER_REQUEST, data}\n}\n\n/**\n   * Sets the `error` state to the error received\n   * @param  {object} error The error we got when trying to make the request\n   */\nexport function requestError (error) {\n    return {type: REQUEST_ERROR, error}\n}\n\n/**\n * Sets the `error` state as empty\n */\nexport function clearError () {\n    return {type: CLEAR_ERROR}\n}\n\nexport default reducer"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAFA;AACA;AAKA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtBA;AAwBA;AAEA;;;;;;;;AAMA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;;;;;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;;;;;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;;;;;;;AAMA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;;;;AAGA;AACA;AAAA;AAAA;AACA;AAEA;;;;;;;AAMA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;;;;;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;;;;AAGA;AACA;AAAA;AAAA;AACA;AAEA;;;;A","sourceRoot":""}